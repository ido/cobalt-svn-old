.TH "cqadm" 8
.SH "NAME"
cqadm \- queue manager administration tool
.SH "SYNOPSIS"
.B cqadm [-d] [--hold] [--release] [--run=<location>] [--kill] [--delete] [--queue=newqueue] <jobid> <jobid>

.B cqadm [-d] [-f] [--addq] [--delq] [--getq] [--setq 'prop=value prop=value'] [--unsetq 'property property'] <queue> <queue>

.B cqadm [--version]

.SH "DESCRIPTION"
Administrative interface for queue manager. Allows one to hold, run, kill, and set the queue for jobs in the queue manager. Can also add/del queues and set queue properties.

.SH "OPTIONS"
.TP
.B \-\-version
Display client revision and Cobalt version
.TP
.B \-d
Enable communication debugging
.TP
.B \-f
Force queue deletion
.TP
.B \-\-hold jobid
Set job state to hold, preventing execution (only works on 'queued' jobs)
.TP
.B \-\-release jobid
Set job state to ready, allowing execution
.TP
.B \-\-run=<location> jobid
Run the job immediately on the specified location
.TP
.B \-\-kill jobid
Kill job(s) using normal mechanism
.TP
.B \-\-delete jobid
Kill job(s) using forceable deletion. Job state will be deleted. This
may leave processes dangling on computation resources. 
.TP
.B \-\-queue=<queue> jobid
Move job to specified queue (only works on jobs that are not 'running')
.TP
.B \-\-time=<walltime> jobid
Change job walltime to specified one
.TP
.B \-i index jobid
Change the sorting index of the job, so that fifo behaves differently
in scheduling.
.TP
.B \-j next jobid
Set the jobID of the next job submitted to Cobalt
.TP
.B \-\-addq queue
Add specified queue(s) to queue manager
.TP
.B \-\-delq queue
Delete specified queue(s) from queue manager
.TP
.B \-\-getq queue
List queue(s) in queue manager
.TP
.B \-\-startq queue
Start queue(s). Queue state is set to 'running'.
.TP
.B \-\-stopq queue
Stop queue(s). Queue state is set to 'stopped'. New jobs can be submitted, but existing jobs will not be run.
.TP
.B \-\-drainq queue
Drain queue(s). No new jobs can be submitted, and jobs already in the queue will run normally. Queue state is set to 'draining'.
.TP
.B \-\-killq queue
Kill the queue(s). No new jobs can be submitted, and no jobs in the queue will run. Queue state is set to 'dead'.
.TP
.B \-\-setq 'prop=value prop=value' queue
Set properties for one or more queues. The prop=value pairs are separated by whitespace.
.TP
.B \-\-unsetq 'property property' queue
Move a property back to its unset state.  Used for example, to remove a queue restriction.
.TP
.SH "Properties"
.RS
.TP
.B maxtime=mm
The maximum walltime (in minutes) allowed for jobs submitted to the queue.
.TP
.B mintime=mm
The minimum walltime (in minutes) allowed for jobs submitted to the queue.
.TP
.B maxqueued=x
The maximum number of jobs a user is allowed to have in the queue, whether running or queued.
.TP
.B users=user1:user2:user2
List of users allowed to submit to the queue. An '*' means any user can submit to the queue.
.TP
.B state=running|stopped|draining|dead
Flag determining state of queue. If the queue is 'stopped', jobs can be submitted to the queue, but no jobs will be run by the scheduler. If the queue is 'draining', no new jobs will be allowed to be added to the queue, but jobs existing in the queue will be run. If the queue is 'dead', no new jobs will be added and no existing jobs will be run. (Also provided by 
.B "\-\-startq" "\-\-stopq" "\-\-drainq" "\-\-killq"
).
.TP
.B adminemail=user@example.com:nobody@example.com
Send an email at the start and stop of every job run through the specified queue.
.TP
.B maxrunning=x
The maximum number of jobs a user is allowed to have running in the queue.
.TP
.B maxusernodes=x
The maximum number of nodes a user is allowed to have allocated with running jobs in the queue.
.TP
.B totalnodes=x
The maximum number of nodes any jobs in the queue are allowed to have allocated with running jobs.
.TP
.B priority=x
The priority that should be set for the queue.  The default priority for a queue is 0, and larger numbers indicate higher priority.

.SH "EXAMPLE"
\" .IP
Set no minimum walltime, a max walltime of 30 minutes, and only users 'mike, john, and george' can submit to someq:
.IP
.B cqadm --unsetq mintime someq
.IP
.B cqadm --setq 'maxtime=30 users=mike:john:george' someq


.RE
.SH "SEE ALSO"
.BR cqm(8)
.SH "BUGS"
